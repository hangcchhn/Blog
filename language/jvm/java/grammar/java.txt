
---

String.split()
分割字符串分隔符转义字符\\
$ ^ * + | \ . ? ( ) [ ] { }
---

数组：
Xxx[] xxxs = new Xxx[n];
区分：
定义：Xxx[] xxxs = null;和Xxx[] xxxs = new Xxx[0];
判断：xxxs == null 和 xxxs.length == 0
---

java语言中数字
以0开头，其他数字在0-7之间，该数字则是八进制数
以0x开头，其他数字在0-7之间，该数字则是十六进制数
---

关键字final

final变量：常量，其值一旦初始化就不能再修改
final函数：不能被重载
final类：不能被继承


---


Java序列化：将对象转化为字节数组，
可以保存在磁盘上，或可以通过网络进行传输
以达到以后恢复成原来的对象。

静态成员不序列化

实现java.io.Serializable接口
序列化 ID
private static final long serialVersionUID = 1L;

在成员前加上transient关键字，可以阻止该成员被序列化到文件中
在被反序列化后，被关键字transient修饰的成员的值被设为初始值

---

赋值：
1.基本类型：复制内容（数值）
2.对象类型：复制引用（地址）

复制
1.浅复制：复制对象的引用但不复制引用的对象
2.深复制：复制引用的对象及其成员引用的对象


---

java语言基本数据类型占有byte字节数量
32位64位都一样千万注意别和C语言记混了

byte->1byte
char->2byte
short->2byte
int->4byte
long->8byte
float->4byte
double->8byte

占有bit位数
boolen->1bit
byte->8bit


---


Java事务的类型有三种：JDBC事务、JTA（Java Transaction API）事务、容器事务。

---

泛型：模板Template
public class Template<T>{}

public <T> T method(){}



---

代码块
1.方法代码块：定义在方法内
调用方法时被执行
public void test() {
    {
        // code
    }

}

2.类代码块：定义在类中
创建类时执行，优先构造函数
public class Demo {
    {
        // code
    }
}

3.静态代码块：定义在类中，使用static修饰
只会执行一次，优先构造函数
public class Demo {
    static {
        // code
    }
}

4.同步代码块：定义在方法内，使用synchronized修饰
在多线程中只能

public void test() {
    Object object = new Object();
    synchronized(object) {
        // code
    }
}

---
jmh——Java Micro-benchmark Harness
// 系统头文件
#include <stdio.h>
// 自定义头文件
#include "header.h"

类文件=头文件+源文件
头文件：header.h
源文件：source.c

void main()
{
    // code
}

int main(void)
{
    // code
    return 0;
}

int main(void)
{
    // code
    return 0;
}

--------------------------------------------------------------------------------------------------

gcc:gcc -o md5 md5.c -lcrypto

Qt Creator:LIBS += -lcrypto

CLion:target_link_libraries(endecrypt libcrypto.so)

--------------------------------------------------------------------------------------------------


C语言数据结构和对应的字节数:

数据类型长度与对应的编译器位数有关
bit     16  32  64
char*   2   4   8
char    1   1   1
short   2   2   2
int     2   4   4
long    4   4   8
float   4   4   4
double  8   8   8

unsigned无符号类型不改变原有数据类型长度


--------------------------------------------------------------------------------------------------

printf：格式化输出
%a(%A)：浮点数、十六进制数字和p-(P-)记数法(C99)
%e(%E)：浮点数指数输出[e-(E-)记数法]
%g(%G)：浮点数不显无意义的零"0"
%x(%X)：十六进制整数0f(0F)
%c：字符
%d：有符号十进制整数
%f：浮点数(包括float和doulbe)
%i：有符号十进制整数(与%d相同)
%u：无符号十进制整数
%o：八进制整数
%p：指针
%s：字符串
%%："%" 



--------------------------------------------------------------------------------------------------

结构体访问成员使用.
指针访问成员使用->

Struct s = {};
Struct *p = &s;

p->i
s.i



--------------------------------------------------------------------------------------------------
#include<stdlib.h>
#define MAX_COUNT 10

mode="r"
mode="w+"

path=""

FILE* fp = fopen(path, mode);

char* line = malloc(MAX_COUNT);
fgets(line, MAX_COUNT, fp);

fputs(line, fp);

fclose(fp);

--------------------------------------------------------------------------------------------------


double d = strtod(str, NULL);

sprintf(str, "%lf", d)


--------------------------------------------------------------------------------------------------



--------------------------------------------------------------------------------------------------

distinct 去重
不能部分使用distinct


limit n = limit 0, n = limit n offset 0


asc desc
每列单独指定

limit 位于 order by 之后

mysql在执行where字符串匹配时默认不区分大小写 where xxx='xxx' | xxx like "xxx"
空值匹配：is null | is not null

mysql支持使用not 对in 、between 和 exists子句取反

% 匹配给定位置的0个、1个或多个字符
like "%" 不能匹配null空值

_ 匹配给定位置的1个字符




--------------------------------------------------------------------------------------------------

group by xxx with rollup
having 过滤分组

select子句顺序
select > from > where > group by > having > order by > limit

嵌套子查询：过滤（减少行）
层数与性能

子查询列匹配

相关子查询：统计（新增列）
歧义列名

关系|关联|联结 查询
列名要加上表名前缀
from后跟多张表
where判断主外键关联（被联结列）
笛卡儿积：多表行数乘积

内联结：多表关联查询
select ... from t_a inner join t_b on ...

自联结：嵌套子查询前后表面相同
select ...from t_o where c_o *** (select c_o from t_o where ...)


外联结：包含没有关联的行
select ... from t_l left|right outer join t_r on ...
统计所有的(left|right)->(t_l|t_r)中的行（左外联结|右外联结）


组合查询： 并集

（select c_u from t_u where w_a ）union （select c_u from t_u where w_b）
= select c_u from t_u where w_a or w_b

union all：显示重复的行

组合不同的表：数据类型相同

--------------------------------------------------------------------------------------------------

全文本搜索|索引：fulltext(...) 类似 primary key(...)
???
创建表时加上全文本索引索引fulltext
* 先导入数据再添加索引
使用两个函数match()和against()执行全文本搜索
其中match()指定被搜索的列
against()指定要搜索的文本。

数据迁移
insert into t_a select * from t_b where ...

忽略错误
update ignore t set ... where ...


自动增长
auto_increment
select last_insert_id()

--------------------------------------------------------------------------------------------------









关于加载spring配置文件的时候使用FileSystemXmlApplicationContext
在linux或macos系统中使用/根路径开头的绝对路径，系统会识别转换转换成相对路径导致读取文件出错
解决方式是在绝对路径前面加上"file:"就可以解决跨系统开发联调测试问题

对于spring4.1.x版本使用@PropertySource和@Value注解时会出现读取properties文件中的数据为注解参数
解决方式是升级spring版本   亲试升级到spring4.3.x版本



@Value("${parameter.name:default_value}")

@ConfigurationProperties
value=prefix：前缀
@AliasFor("prefix")
String value() default "";

@AliasFor("value")
String prefix() default "";


获取单个属性使用注解@Value赋值给属性字段
获取多个属性使用注解@ConfigurationProperties赋值给类型对象


@PropertySource
加载springboot配置文件
只能加载*.properties文件

@ImportResource
加载spring配置文件xml
加载*.xml文件
value=locations:定位
@AliasFor("locations")
String[] value() default {};

@AliasFor("value")
String[] locations() default {};

@Import
加载spring配置文件java
@Bean

@ImportResource和@Import加载spring配置文件（xml或java）
都要使用到@Configuration实现使用注解方式



--------------------------------------------------------------------------------------------------
子类依赖注入父类属性：

1.public修饰父类属性
@Autowired 
public void superAttribute(){
    super.attributes = attributes;
}

2.protected修饰父类属性
@Lazy
@Autowired  
protected Attribute attributes;


--------------------------------------------------------------------------------------------------
spring EL 表达式



--------------------------------------------------------------------------------------------------


spring aop是基于ioc实现的

spring aop 底层原理是代理模式
代理模式，其实就是让别人做同样的事情，但是别人却不仅将我的事情做了，还会把他的事情也做了


静态代理




JDK动态代理
必须有接口


java.lang.reflect.Proxy类

需要实现InvocationHandler接口的invoke方法
通过Proxy类的newProxyInstance方法创建代理对象

CGlib动态代理
字节码技术

实现MethodInterceptor接口



--------------------------------------------------------------------------------------------------
异步调用
@Async
要求修饰的方法返回值为void或Future<T>

spring默认使用SimpleAsyncTaskExecutor线程池

默认大小16个

SimpleAsyncTaskExecutor提供了限流机制:ConcurrencyThrottleSupport
org.springframework.util.ConcurrencyThrottleSupport
beforeAccess()
afterAccess()
通过concurrencyLimit属性来控制开关，当concurrencyLimit>=0时开启限流机制，
默认关闭限流机制即concurrencyLimit=-1，当关闭情况下会不断创建新的线程来处理任务


spring-boot推荐使用ThreadPoolTaskExecutor，

优化
optimization

--------------------------------------------------------------------------------------------------

尽量减少全表扫描
注意导致索引失效

在 MySQL 5.0 之前的版本要尽量避免使用 or 查询，可以使用 union 或者子查询来替代，因为早期的 MySQL 版本使用 or 查询可能会导致索引失效问题，
在 MySQL 5.0 之后的版本中引入了索引合并，就是多条件查询，比如 or 或 and 查询的结果集进行合并交集或并集的功能，就不会导致索引失效的问题了。


避免在 where 查询条件中使用 != 或者 <> 操作符，
因为这些操作符会导致查询引擎放弃索引而进行全表扫描。

查询具体的字段而非全部字段
减少不必要的数据传输占有读写

避免在查询结果中使用计算
否则会导致索引失效的问题

创表语句中要求字段非空并设置默认值
空值会导致查询过程中索引失效的问题



尽量使用join连接语句来替代子查询，
因为子查询是嵌套查询，而嵌套查询会新创建一张临时表，
而临时表的创建与销毁会占用一定的系统资源以及花费一定的时间，
但join连接语句并不会创建临时表，
尽量使用小表驱动大表的方式进行查询


在高版本数据库中对于在join后使用where条件
会因为条件判断结果的记录数，
按小表驱动大表原则优化查询，
使用执行计划查看语句查询优化后的执行顺序。






适当使用前缀索引，MySQL 是支持前缀索引的。
可以定义字符串的一部分来作为索引，索引越长占用的磁盘空间就越大。
适当的选择使用前缀索引，可以减少空间的占用和提高查询效率。
* 模糊查询注意使用最左前缀


* 联合索引注意最左匹配原则
创建联合索引的时候需要注意索引字段创建的顺序
在每次复合查询条件字段时是从左往右匹配数据的

特别注意陷阱问题：
关于联合索引注意最左匹配原则，在高版本数据库中会优化查询调整条件顺序




--------------------------------------------------------------------------------------------------


慢查询
开启慢查询日志的记录功能：
1.命令行执行 mysql>
set global slow_query_log=1
2.配置文件 my.cnf
slow_query_log=1 
slow_query_log_file=/tmp/mysql_slow.log

--------------------------------------------------------------------------------------------------

执行计划explain



id:选择标识符
select_type:表示查询的类型。
table:输出结果集的表
partitions:匹配的分区
type:表示表的连接类型
possible_keys:表示查询时，可能使用的索引
key:表示实际使用的索引
key_len:索引字段的长度
ref:列与索引的比较
rows:扫描出的行数(估算的行数)
filtered:按表条件过滤的行百分比
Extra:执行情况的描述和说明


select_type查询类型:主要用于区别普通查询，联合查询，子查询等的复杂查询
1、simple ——简单的select查询，查询中不包含子查询或者UNION
2、primary ——查询中若包含任何复杂的子部分，最外层查询被标记
3、subquery——在select或where列表中包含了子查询
4、derived——在from列表中包含的子查询被标记为derived（衍生），MySQL会递归执行这些子查询，把结果放到临时表中
5、union——如果第二个select出现在UNION之后，则被标记为UNION，如果union包含在from子句的子查询中，外层select被标记为derived
6、union result:UNION 的结果



type显示联结类型，显示查询使用了何种类型，按照从最佳到最坏类型排序
1、system：表中仅有一行（=系统表）这是const联结类型的一个特例。
2、const：表示通过索引一次就找到，const用于比较primary key或者unique索引。因为只匹配一行数据，所以如果将主键置于where列表中，mysql能将该查询转换为一个常量
3、eq_ref:唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配。常见于唯一索引或者主键扫描
4、ref:非唯一性索引扫描，返回匹配某个单独值的所有行，本质上也是一种索引访问，它返回所有匹配某个单独值的行，可能会找多个符合条件的行，属于查找和扫描的混合体
5、range:只检索给定范围的行，使用一个索引来选择行。key列显示使用了哪个索引，
    一般就是where语句中出现了between,in等范围的查询。这种范围扫描索引扫描比全表扫描要好，因为它开始于索引的某一个点，而结束另一个点，不用全表扫描
6、index:index 与all区别为index类型只遍历索引树。通常比all快，因为索引文件比数据文件小很多。
7、all：遍历全表以找到匹配的行
注意:一般保证查询至少达到range级别，最好能达到ref级别。


--------------------------------------------------------------------------------------------------








